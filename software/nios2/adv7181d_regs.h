/*
 *
 */

#ifndef ADV7181_REGS_H
#define ADV7181_REGS_H

#include "i2c_master.h"

#define ADV7181_NUM_REGS ( 36 )

i2c_registers_t const adv7181_registers[ADV7181_NUM_REGS] = {
  { 0x40, 0x00, 0x0D }, // CVBS in on AIN4
  { 0x40, 0x05, 0x02 }, // Prim_Mode =010b for GR
  { 0x40, 0x06, 0x0C }, // VID_STD=1100b for 1024x768 _@ 60
  { 0x40, 0xC3, 0x31 }, // ADC1 to Ain5 (R), ADC0 to Ain2 (G),
  { 0x40, 0xC4, 0xF2 }, // ADC2 to Ain3 (B), enables manual override of mux, use SOG
  { 0x40, 0x1D, 0x47 }, // Enable 28MHz Crystal
  { 0x40, 0x3A, 0x21 }, // set latch clock settings to 010b, Power Down ADC3
  { 0x40, 0x3B, 0x61 }, // Enable Internal Bias
  { 0x40, 0x3C, 0x5D }, // PLL_QPUMP to 101b
  { 0x40, 0x37, 0x00 }, //! LLC polarity
  { 0x40, 0x6A, 0x00 }, // DLL Phase Adjust
  { 0x40, 0x6B, 0x84 }, // Swap Pr & Pb
  { 0x40, 0xC9, 0x08 }, // Set DDR_EN
  { 0x40, 0x73, 0x90 }, // Set man_gain
  { 0x40, 0x7B, 0x1D }, // TURN OFF EAV & SAV CODES Set BLANK_RGB_SEL
  { 0x40, 0x85, 0x03 }, // Enable DS_OUT
  { 0x40, 0x86, 0x0B }, // Enable stdi_line_count_mode
  { 0x40, 0xF4, 0x3F }, // Max Drive Strength
  { 0x42, 0x00, 0x0D }, // CVBS in on AIN4
  { 0x42, 0x05, 0x02 }, // Prim_Mode =010b for GR
  { 0x42, 0x06, 0x0C }, // VID_STD=1100b for 1024x768 _@ 60
  { 0x42, 0xC3, 0x31 }, // ADC1 to Ain5 (R), ADC0 to Ain2 (G),
  { 0x42, 0xC4, 0xF2 }, // ADC2 to Ain3 (B), enables manual override of mux, use SOG
  { 0x42, 0x1D, 0x47 }, // Enable 28MHz Crystal
  { 0x42, 0x3A, 0x21 }, // set latch clock settings to 010b, Power Down ADC3
  { 0x42, 0x3B, 0x61 }, // Enable Internal Bias
  { 0x42, 0x3C, 0x90 }, // PLL_QPUMP to 101b
  { 0x42, 0x37, 0x00 }, //! LLC polarity
  { 0x42, 0x6A, 0x00 }, // DLL Phase Adjust
  { 0x42, 0x6B, 0x84 }, // Swap Pr & Pb
  { 0x42, 0xC9, 0x0C }, // Set DDR_EN 0x08
  { 0x42, 0x73, 0x90 }, // Set man_gain
  { 0x42, 0x7B, 0x1D }, // TURN OFF EAV & SAV CODES Set BLANK_RGB_SEL
  { 0x42, 0x85, 0x03 }, // Enable DS_OUT 0x03
  { 0x42, 0x86, 0x0B }, // Enable stdi_line_count_mode
  { 0x42, 0xF4, 0x3F }, // Max Drive Strength
};


#endif
